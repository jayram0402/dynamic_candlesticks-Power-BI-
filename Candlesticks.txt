----------------------------------------------------------------------------
Developed BY: Jayram Sharma // Contact: jayramsharma0402@gmail.com
----------------------------------------------------------------------------

-----------------------------------DOWNLOAD POWER BI-------------------------
Simply download power BI from browser. And then following the formulas/steps.

-----------------------------------CREATE A TABLE IN EXCEL------------------------------
create table of Foreign Stocks in MS Excel and uplod it in the power BI.


----------------------------------- POWER QUERY FUNCTION -----------------------------------
(StickerSymbol as text) as table =>
let
    EpochReferenceDate = #datetime(1970,1,1,0,0,0),
    DefaultStartDate = DateTime.From(Date.AddYears(Date.From(DateTime.LocalNow()),-5)),
    DefaultEndDate = DateTime.From(Date.From(DateTime.LocalNow())),
    
    StartDate = if Date.DayOfWeek(DefaultStartDate, Day.Monday) = 5 then Date.AddDays(DefaultStartDate,-1) else  /* Saturday */
                if Date.DayOfWeek(DefaultStartDate, Day.Monday) = 6 then Date.AddDays(DefaultStartDate,-2) else /* Sunday */
                if Date.DayOfWeek(DefaultStartDate, Day.Monday) = 0 then Date.AddDays(DefaultStartDate,-3) else DefaultStartDate, /* Monday */
  
    EndDate = if Date.DayOfWeek(DefaultEndDate, Day.Monday) = 5 then Date.AddDays(DefaultEndDate,-1) else  /* Saturday */
                if Date.DayOfWeek(DefaultEndDate, Day.Monday) = 6 then Date.AddDays(DefaultEndDate,-2) else /* Sunday */
                if Date.DayOfWeek(DefaultEndDate, Day.Monday) = 0 then Date.AddDays(DefaultEndDate,-3) else DefaultEndDate, /* Monday*/
    

    StartOfPeriod = Text.Start(Number.ToText(Duration.TotalSeconds(StartDate - EpochReferenceDate)),10),
    EndOfPeriod = Text.Start(Number.ToText(Duration.TotalSeconds(EndDate - EpochReferenceDate)),10),
    
    Source = Csv.Document(Web.Contents("https://query1.finance.yahoo.com/v7/finance/download/"&StickerSymbol&"?period1="&StartOfPeriod&"&period2="&EndOfPeriod&"&interval=1d&events=history&includeAdjustedClose=true"),[Delimiter=",", Columns=7, Encoding=65001, QuoteStyle=QuoteStyle.None]),
    #"Promoted Headers" = Table.PromoteHeaders(Source, [PromoteAllScalars=true]),
    #"Changed Type" = Table.TransformColumnTypes(#"Promoted Headers",{{"Date", type date}, {"Open", type number}, {"High", type number}, {"Low", type number}, {"Close", type number}, {"Adj Close", type number}, {"Volume", Int64.Type}})
in
    #"Changed Type"
----------------------------------- CALCULATED TABLES -----------------------------------
dimPeriod = 
//PURPOSE: Create a table with 9 rows. Each row represents a precise period of time: 1D, 5D, ..., 5Y
VAR _MaxDate    = MAX(Stocks[Date])
VAR _MinDate    = MIN(Stocks[Date])
VAR _ReferenceDate    = DATE(YEAR(_MaxDate),MONTH(_MaxDate), DAY(_MaxDate))
VAR _src        = CALENDAR( _ReferenceDate - 8, _ReferenceDate ) 
VAR _EndDate    = _ReferenceDate
RETURN
    GENERATE (
         _src,
        VAR BaseDate = [date]
        VAR _Order = SWITCH(TRUE,
                                BaseDate = _ReferenceDate, 1, --1D
                                BaseDate = _ReferenceDate - 1, 2, --5D
                                BaseDate = _ReferenceDate - 2, 3, --1M
                                BaseDate = _ReferenceDate - 3, 4, --3M
                                BaseDate = _ReferenceDate - 4, 5, --6M
                                BaseDate = _ReferenceDate - 5, 6, --YTD
                                BaseDate = _ReferenceDate - 6, 7, --1Y
                                BaseDate = _ReferenceDate - 7, 8, --2Y
                                BaseDate = _ReferenceDate - 8, 9 --5Y
                             )
        VAR _StartDate = SWITCH(TRUE,
                                BaseDate = _ReferenceDate,   _EndDate - 1, --1D
                                BaseDate = _ReferenceDate - 1, _EndDate - 5, --5D
                                BaseDate = _ReferenceDate - 2, _EndDate - 30, --1M
                                BaseDate = _ReferenceDate - 3, _EndDate - 90, --3M
                                BaseDate = _ReferenceDate - 4, _EndDate - 180, --6M
                                BaseDate = _ReferenceDate - 5, DATE(YEAR(BaseDate),1,1), --YTD
                                BaseDate = _ReferenceDate - 6, DATE(YEAR(BaseDate)-1,MONTH(BaseDate),DAY(_ReferenceDate)), --1Y
                                BaseDate = _ReferenceDate - 7, DATE(YEAR(BaseDate)-2,MONTH(BaseDate),DAY(_ReferenceDate)), --2Y
                                BaseDate = _ReferenceDate - 8, _MinDate 
                             )
        VAR _StardDateAjusted = SWITCH(TRUE,
                                WEEKDAY(_StartDate,2) = 6, _StartDate  +  2, --Saturday
                                WEEKDAY(_StartDate,2) = 7, _StartDate  +  1, --Sunday
                                _StartDate      
                             )
        VAR _PeriodName = SWITCH(TRUE,
                                BaseDate = _ReferenceDate,   "1D",
                                BaseDate = _ReferenceDate - 1, "5D",
                                BaseDate = _ReferenceDate - 2, "1M",
                                BaseDate = _ReferenceDate - 3, "3M",
                                BaseDate = _ReferenceDate - 4, "6M",
                                BaseDate = _ReferenceDate - 5, "YTD",
                                BaseDate = _ReferenceDate - 6, "1Y",
                                BaseDate = _ReferenceDate - 7, "2Y", 
                                BaseDate = _ReferenceDate - 8, "5Y" 
                             )
        RETURN ROW (
            "Order", _Order,
            "StartDate", _StardDateAjusted,
            "EndDate", _EndDate,
            "Period", _PeriodName
             )
    )
-----------------------------------
dimDate = CALENDAR(MIN(Stocks[Date]), MAX(Stocks[Date]))
----------------------------------- CALCULATED COLUMN -----------------------------------
VarCurrPrev = 
// PURPOSE: Use the [Index] column added in Power Query to return the previous [Close] value
VAR _CurrentRowIndex = Stocks[Index]                      
VAR _PreviousRowIndex = CALCULATE(
    MAX( Stocks[Index] ), 
    FILTER( Stocks, Stocks[Index]  < _CurrentRowIndex ),
    ALL( Stocks[Index])
) 
VAR _Result = CALCULATE(
    MAX( Stocks[Close]),
    FILTER( Stocks, Stocks[Index] = _PreviousRowIndex )
) 

RETURN
    _Result
----------------------------------- MEASURES -----------------------------------
BearishCandle = 
VAR _Diff = ABS(MAXX(Stocks, [Close]-[Open]))
RETURN
        IF(MAXX(Stocks, [Close]-[Open]) < 0, _Diff)

-----------------------------------
BullishCandle = 
VAR _Diff = ABS(MAXX(Stocks, [Close]-[Open]))
RETURN
            IF(MAXX(Stocks, [Close]-[Open]) > 0, _Diff)
-----------------------------------
High = AVERAGE( Stocks[High] )
-----------------------------------
Low = AVERAGE(Stocks[Low])
-----------------------------------
MaxY = MAX(Stocks[Close]) + 5 
-----------------------------------
MinY = MIN(Stocks[Close]) - 5
-----------------------------------
HighDistance =
VAR _MaxValue = IF(MAXX(Stocks, [Close]-[Open]) > 0, MAXX(Stocks, [Close]), MAXX(Stocks, [Open]))
VAR _High = MAXX(Stocks, [High])
RETURN
ABS(_High - _MaxValue) * - 1 -- I multiply by -1 to reverse the direction (Up to Down)
-----------------------------------
LowDistance =
VAR _MinValue = IF(MAXX(Stocks, [Close]-[Open]) < 0, MAXX(Stocks, [Close]), MAXX(Stocks, [Open]))
VAR _Low = MAXX(Stocks, [Low])
RETURN
ABS( _Low - _MinValue )
-----------------------------------
Last Close Price = 
VAR _LastDate = CALCULATE(MAX(Stocks[Date]), ALLSELECTED(Stocks))
RETURN
CALCULATE( AVERAGE( Stocks[Close] ), Stocks[Date] = _LastDate)
-----------------------------------
BeginingPeriodPrice = 
VAR _Price = CALCULATE( MAX( Stocks[Close] ), dimDate[Date] = MAX( dimPeriod[StartDate] ) )
VAR _AjustedPrice = CALCULATE( MAX( Stocks[Close] ), dimDate[Date] = MAX( dimPeriod[StartDate]) + 1 )
RETURN
IF( _Price = BLANK(), _AjustedPrice, _Price )
-----------------------------------
DateFilter = IF( MAX( Stocks[Date]) >= MAX( dimPeriod[StartDate] ), 1 )
-----------------------------------
Moving average = 
VAR _Period = SELECTEDVALUE(tParameter[NumberOfDays])
VAR _Numerator = CALCULATE(
                             SUM(Stocks[Close]), DATESINPERIOD(Stocks[Date],LASTDATE(Stocks[Date]), - _Period, DAY )
)
VAR _Denominator = CALCULATE(
                             COUNT(Stocks[Date]), DATESINPERIOD(Stocks[Date],LASTDATE(Stocks[Date]), - _Period, DAY )
                            )
RETURN
DIVIDE(_Numerator, _Denominator)
-----------------------------------
Variation # = 
VAR _Delta = [Last Close Price] - [BeginingPeriodPrice]
VAR _Period = MAX(dimPeriod[Period])
VAR _Arrow = IF(_Delta > 0, UNICHAR( 129033 ) , UNICHAR( 129035 )) & " "
RETURN
_Arrow & FORMAT(ABS(_Delta), "0.00") & "  " & _Period
-----------------------------------
Variation % = 
VAR _Variation = DIVIDE([Last Close Price], [BeginingPeriodPrice]) - 1
VAR _Arrow = IF(_Variation > 0, UNICHAR( 129033 ) , UNICHAR( 129035 )) & " "
RETURN
_Arrow & FORMAT(ABS(_Variation), "0.00%")
-----------------------------------
Variation Curr Vs Prec = 
VAR _PrevClose  = AVERAGE( Stocks[VarCurrPrev] )
VAR _CurrClose = AVERAGE( Stocks[Close] )
VAR _Variation = DIVIDE( _CurrClose , _PrevClose ) - 1
RETURN
 _Variation 
-----------------------------------
Variation Indicator = 
VAR _Variation = DIVIDE([Last Close Price], [BeginingPeriodPrice]) - 1
RETURN
IF( _Variation >= 0, 1, 0 ) -- 1 = green ; 0 = red
-----------------------------------
At Close = 
VAR _MaxDate = MAX( Stocks[Date] )
VAR _MarketRef = " · USD · NASDAQ"
RETURN
"At close: " & FORMAT( _MaxDate, "d mmmm yyyy", "en-CA") & _MarketRef
-----------------------------------
CompanyName = MAX(Stocks[CompanyName])
-----------------------------------
Green Volume = 
VAR _PrevClose  = CALCULATE( AVERAGE( Stocks[Close] ),
                            OFFSET(-1, 
                                    ALLSELECTED (Stocks[Date],Stocks[symbol] ),
                                    ORDERBY( Stocks[Date] ),KEEP,
                                    PARTITIONBY(Stocks[symbol] ) 
                                  )
                                )
VAR _CurrClose = AVERAGE( Stocks[Close] )
VAR _Volume = AVERAGE( Stocks[Volume] )
RETURN
IF( _CurrClose > _PrevClose, _Volume )
-----------------------------------
Red Volume = 
VAR _PrevClose  = CALCULATE( AVERAGE( Stocks[Close] ),
                            OFFSET(-1, 
                                    ALLSELECTED (Stocks[Date],Stocks[symbol] ),
                                    ORDERBY( Stocks[Date] ),KEEP,
                                    PARTITIONBY(Stocks[symbol] ) 
                                  )
                                )
VAR _CurrClose = AVERAGE( Stocks[Close] )
VAR _Volume = AVERAGE( Stocks[Volume] )
RETURN
IF( _CurrClose < _PrevClose, _Volume )
-----------------------------------
MaxVolume = MAX( Stocks[Volume] ) 
-----------------------------------
ToolTips = 
VAR _Date = FORMAT(MAX(Stocks[Date]), "d MMMM yyyy", "en-CA")
VAR _OpenText = "Open"
VAR _HighText = "High"
VAR _LowText = "Low"
VAR _CloseText = "Close"
VAR _VolumeText = "Volume"
VAR _PercChangeText = "% Change"
VAR _Open = FORMAT( MAX(Stocks[Open]), "0.00" )
VAR _High = FORMAT( MAX(Stocks[High]), "0.00" )
VAR _Low = FORMAT(  MAX(Stocks[Low]), "0.00" )
VAR _Close = FORMAT( MAX(Stocks[Close]), "0.00" )
VAR _Volume = FORMAT( MAX( Stocks[Volume] ), "0,,.00M")
VAR _Variation =  FORMAT( [Variation Curr Vs Prec], "0.00%" )
VAR _Espace =  "‎ " -- white space
VAR _BeforeEspaceNumber = 15
VAR _Lenght = 10
VAR _TotalLenght = _BeforeEspaceNumber + _Lenght
VAR _LenghtOfDashLine = REPT("-", _TotalLenght ) 
VAR _CenteredText = ROUND(DIVIDE(_TotalLenght - LEN(_Date),2),0)
RETURN
_LenghtOfDashLine & UNICHAR( 10 ) & REPT(_Espace, _CenteredText) & _Date & UNICHAR( 10 ) & _LenghtOfDashLine & UNICHAR( 10 ) &
_OpenText  & REPT(_Espace, _BeforeEspaceNumber - LEN( _OpenText ))  & REPT(_Espace, _Lenght - LEN(_Open))  & _Open  & UNICHAR( 10 ) &
_HighText  & REPT(_Espace, _BeforeEspaceNumber - LEN( _HighText ))  & REPT(_Espace, _Lenght - LEN(_High))  & _High  & UNICHAR( 10 ) &
_LowText   & REPT(_Espace, _BeforeEspaceNumber - LEN( _LowText ))   & REPT(_Espace, _Lenght - LEN(_Low ))  & _Low  & UNICHAR( 10 ) &
_CloseText & REPT(_Espace, _BeforeEspaceNumber - LEN( _CloseText )) & REPT(_Espace, _Lenght - LEN(_Close)) & _Close & UNICHAR( 10 ) &
_VolumeText & REPT(_Espace, _BeforeEspaceNumber - LEN( _VolumeText )) & REPT(_Espace, _Lenght - LEN(_Volume)) & _Volume & UNICHAR( 10 ) & 
_PercChangeText & REPT(_Espace, _BeforeEspaceNumber - LEN( _PercChangeText )) & REPT(_Espace, _Lenght - LEN(_Variation)) & _Variation
----------------------------------- FORMATTING -----------------------------------
Chart :
	Candlestick:
		Size: W(1250) ; H(450)
		Position: Horizontal = 15 ; Vertical = 130
	Volume:
		Size: W(1250) ; H(125)
		Position: Horizontal = 15 ; Vertical = 580
-----------------------------------
Dark Mode:
	Page:
		background:#000000
		transparency: 0%
	Company Name:
		type: Multi-row Card
		font size : 11
		font color: #CCCCCC		
	Column chart color (Volume & Candles)
		green : #20B100
		red :#F40000 
	Line chart (Moving Average)
		type: Dotted
		color: #E6E6E6
	Stock Price:
		font size : 24
		font color: #CCCCCC
		card size: W(140); H(55)
		Position: Horizontal = 15 ; Vertical = 60
	Variation:
		font size : 10
		font color: #03DB15 (green) ; #F63131 (red)
		bg color: #26E723 (green) ; #F75353 (red)
		bg transparency: 85%
		card size: W(90); H(32)
		Position: Horizontal = 155 ; Vertical = 70
	At Close:
		font size : 8
		font color: #CCCCCC
	Period slicer:
		font size : 8
		font color: #999999
		bg color: #000000
		card size: W(395); H(30)
		Position: Horizontal = 460 ; Vertical = 100	
	Moving Average slicer:
		font size : 8
		font color: #999999
		bg color: #000000
		card size: W(220); H(30)
		Position: Horizontal = 870 ; Vertical = 100
	Navigation button:
		font size : 8
		font color: #999999
		bg color: #000000
		size: W(75); H(15)
		Position: Horizontal = 1115 ; Vertical = 103		
-----------------------------------
Light Mode:
	Page:
		background:#F7F7F7
	Company Name:
		type: Multi-row Card
		font color: #666666	
	Column chart color (Volume & Candles)
		green : #4C9D4D
		red :#F70000 
	Line chart (Moving Average)
		color: #000000
	Stock Price:
		font color: #333333
	Variation:
		font color: #003504 (green) ; #F63131 (red)
		bg color: #68AE67 (green) ; #F75353 (red)
----------------------------------- TOOLTIPS -----------------------------------
Canvas
	size: H(175); W(200)
Table
	size: H(177); W(236)
	position: Horizontal = 4 ; Vertical = 0
	font: 
		name: Consolas (monospaced)
		size: 9
		color: #252423
	
